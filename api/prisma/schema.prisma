generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int                   @id @default(autoincrement())
  createdAt      DateTime              @default(now())
  firstName      String
  lastName       String?
  email          String                @unique
  profilePicture String?
  googleToken    String?
  organisations  UsersInOrganisation[]
}

model Organisation {
  id         Int                      @id @default(autoincrement())
  createdAt  DateTime                 @default(now())
  name       String                   @unique
  acronym    String?
  inviteCode OrganisationInviteCode[]
  pages      Page[]
  users      UsersInOrganisation[]
}

model UsersInOrganisation {
  userId         Int
  createdAt      DateTime     @default(now())
  organisationId Int
  organisation   Organisation @relation(fields: [organisationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])

  @@id([userId, organisationId])
}

model Page {
  id                       Int                    @id @default(autoincrement())
  createdAt                DateTime               @default(now())
  name                     String
  organisationId           Int
  sheetId                  String                 @unique
  webLink                  String                 @unique
  backgroundColor          String                 @default("#0582CA")
  backgroundImageLink      String?
  buttonColor              String                 @default("#53B2E3")
  fontFamily               String                 @default("Montserrat")
  headingColor             String                 @default("#FFFFFF")
  logoLink                 String?
  textColor                String                 @default("#FFFFFF")
  textFieldBackgroundColor String                 @default("#0676B6")
  sheetTabId               String                 @default("0")
  dropDownBackgroundColor  String                 @default("#4F4F4F")
  identificationColumns    Column[]
  membershipCheckUsage     MembershipCheckUsage[]
  organisation             Organisation           @relation(fields: [organisationId], references: [id])
}

model Column {
  id         Int    @id @default(autoincrement())
  sheetsName String
  mappedTo   String
  pageId     Int
  page       Page   @relation(fields: [pageId], references: [id])
}

model OrganisationInviteCode {
  id             Int          @id @default(autoincrement())
  code           String       @unique
  organisationId Int
  createdAt      DateTime     @default(now())
  organisation   Organisation @relation(fields: [organisationId], references: [id])
}

model MembershipCheckUsage {
  id          Int      @id @default(autoincrement())
  isDuplicate Boolean
  userInput   String
  columnName  String
  createdAt   DateTime @default(now())
  pageId      Int
  page        Page     @relation(fields: [pageId], references: [id])
}
